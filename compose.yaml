services:

  frontamourconnect:
    container_name: frontamourconnect
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.node_frontend
      args:
        - NEXT_PUBLIC_PORT=${NEXT_PUBLIC_PORT}
        - IP_NOW_FRONTEND=${IP_NOW_FRONTEND}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - ${NEXT_PUBLIC_PORT}:${NEXT_PUBLIC_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontamourconnect.rule=Host(`tubevideo.shop`)"
      - "traefik.http.routers.frontamourconnect.tls=true"
      - "traefik.http.routers.frontamourconnect.tls.certresolver=prodresolver"
      - "traefik.http.routers.frontamourconnect.entrypoints=websecure"
      - "traefik.http.services.frontamourconnect.loadbalancer.server.port=${NEXT_PUBLIC_PORT}"
      - "traefik.http.routers.frontamourconnect.middlewares=crowdsec-frontamourconnect@docker,frontamourconnect-redirect"
      - "traefik.http.middlewares.crowdsec-frontamourconnect.plugin.crowdsec-bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec-frontamourconnect.plugin.crowdsec-bouncer.crowdseclapikey=${CrowdSec_BOUNCER_API_KEY}"
      - "traefik.http.middlewares.frontamourconnect-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.frontamourconnect-redirect.redirectregex.regex=^https?://www\\.tubevideo\\.shop/(.*)"
      - "traefik.http.middlewares.frontamourconnect-redirect.redirectregex.replacement=https://tubevideo.shop/$${1}"